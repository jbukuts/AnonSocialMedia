{"version":3,"sources":["./src/app/search-posts/search-posts.page.html","./src/app/item.service.ts","./src/app/search-posts/search-posts-routing.module.ts","./src/app/search-posts/search-posts.module.ts","./src/app/search-posts/search-posts.page.scss","./src/app/search-posts/search-posts.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,ucAAuc,iBAAiB,gEAAgE,qBAAqB,YAAY,gQAAgQ,WAAW,mJAAmJ,KAAK,WAAW,0P;;;;;;;;;;;;;;;;;;;;;ACA57B;AACH;AAEH;AACY;AAOjD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAItB,YAAmB,MAAc,EAAS,eAAgC;QAAvD,WAAM,GAAN,MAAM,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAF1E,QAAG,GAAG,iDAAiB,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAchD,UAAK,GAAY,IAAI,KAAK,EAAE,CAAC;QAE7B,6CAA6C;QAC7C,aAAQ,GAAY,IAAI,KAAK,EAAE,CAAC;QAd9B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAEnC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAC,eAAe,CAAC,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEO,WAAW,CAAC,CAAC,EAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IAEY,UAAU,CAAC,QAAQ;;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,EAAE,GAAG,kDAAkB,EAAE,CAAC;YAE9B,qCAAqC;YACrC,EAAE,CAAC,UAAU,CAAC,gBAAgB,GAAC,QAAQ,GAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAE,UAAS,aAAa;gBACzG,aAAa,CAAC,OAAO,CAAC,UAAS,GAAG;oBAChC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;oBAExB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACpC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAE,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAE,IAAI,CAAC,WAAW,EAAE,GAAE,GAAG,GAAC,IAAI,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,CAAC,GAAG,GAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAG5I,2BAA2B;oBAC3B,mCAAmC;oBACnC,OAAO,CAAC,IAAI,CAAC;wBACX,OAAO,EAAG,IAAI,CAAC,OAAO;wBACtB,IAAI,EAAG,IAAI,CAAC,IAAI;wBAChB,SAAS,EAAG,IAAI,CAAC,SAAS;wBAC1B,KAAK,EAAG,GAAG,CAAC,GAAG,CAAC,EAAE;qBACnB,CAAC,CAAC;oBAEH,yBAAyB;oBACzB,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;wBACpB,OAAO,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;qBAC7C;gBACH,CAAC,CACF;YAAA,CAAC,CAAC,CAAC;YAEJ,OAAO,OAAO,CAAC;QACjB,CAAC;KAAA;IAGD,mBAAmB;IACZ,QAAQ;QACb,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,EAAE,GAAG,kDAAkB,EAAE,CAAC;QAE9B,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAE,UAAS,aAAa;YAC/D,aAAa,CAAC,OAAO,CAAC,UAAS,GAAG;gBAChC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAGxB,2BAA2B;gBAC3B,mCAAmC;gBACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBACd,IAAI,EAAG,IAAI,CAAC,IAAI;oBAChB,KAAK,EAAG,IAAI,CAAC,KAAK;oBAClB,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,KAAK,EAAG,GAAG,CAAC,GAAG,CAAC,EAAE;iBACnB,CAAC,CAAC;gBAEH,iCAAiC;gBACjC,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;oBACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;iBACnD;YACH,CAAC,CACF;QAAA,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC/C,CAAC;IAGD,oCAAoC;IAC7B,iBAAiB,CAAC,KAAK,EAAC,IAAI;QACjC,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,YAAY;QACZ,IAAI,EAAE,GAAG,kDAAkB,EAAE,CAAC;QAC9B,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC;YACjC,KAAK,EAAG,KAAK;YACb,IAAI,EAAG,IAAI;YACX,SAAS,EAAG,IAAI,CAAC,GAAG,EAAE;SACvB,CAAC;aACD,IAAI,CAAC,UAAS,MAAM;YACnB,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAClD,6BAA6B;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,KAAK,EAAG,KAAK;gBACb,IAAI,EAAG,IAAI;gBACX,KAAK,EAAG,MAAM,CAAC,EAAE;gBACjB,SAAS,EAAG,IAAI,CAAC,GAAG,EAAE;aACvB,CAAC,CAAC;QACL,CAAC,CAAC;aACD,KAAK,CAAC,UAAS,KAAK;YACnB,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,kCAAkC;QAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,6CAA6C;IACtC,UAAU,CAAC,KAAK,EAAC,IAAI,EAAC,GAAG;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,YAAY;QACZ,IAAI,EAAE,GAAG,kDAAkB,EAAE,CAAC;QAC9B,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC;YACjC,KAAK,EAAG,KAAK;YACb,IAAI,EAAG,IAAI;YACX,SAAS,EAAI,IAAI,CAAC,GAAG,EAAE;YACvB,GAAG,EAAG,GAAG;SACV,CAAC;aACD,IAAI,CAAC,UAAS,MAAM;YACnB,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAClD,6BAA6B;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,KAAK,EAAG,KAAK;gBACb,IAAI,EAAG,IAAI;gBACX,GAAG,EAAG,GAAG;gBACT,SAAS,EAAG,IAAI,CAAC,GAAG,EAAE;gBACtB,KAAK,EAAG,MAAM,CAAC,EAAE;aAClB,CAAC,CAAC;QACL,CAAC,CAAC;aACD,KAAK,CAAC,UAAS,KAAK;YACnB,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAGH,kCAAkC;QAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,wDAAwD;IAClD,YAAY,CAAC,OAAO;;YACxB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,KAAK,EAAE,MAAM;gBACb,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,IAAI;gBACd,eAAe,EAAE,IAAI;aACtB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IAED,WAAW,CAAC,UAAU;QACpB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;QAExC,IAAI,UAAU,IAAI,EAAE,EAAE;YACpB,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAnL4B,qDAAM;YAA0B,8DAAe;;AAJ/D,WAAW;IAJvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAM2B,qDAAM,EAA0B,8DAAe;GAJ/D,WAAW,CAuLvB;AAvLuB;AAyLjB,MAAM,eAAe,GAAG,QAAQ,CAAC,EAAE;IACxC,IAAI,SAAS,GAAG,EAAE,CAAC;IAEnB,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;QAC/B,IAAI,IAAI,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IACH,OAAO,SAAS,CAAC;AACnB,CAAC;;;;;;;;;;;;;;;;;;;;AC9MwC;AACc;AAED;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAMF,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;AAA/B,4BAA4B;IAJxC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACM;AACF;AAEA;AAEgC;AAEvB;AAWtD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;AAAxB,qBAAqB;IATjC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,yFAA4B;SAC7B;QACD,YAAY,EAAE,CAAC,kEAAe,CAAC;KAChC,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;ACnBlC,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;ACAb;AACT;AACD;AACM;AAS9C,IAAa,eAAe,GAA5B,MAAa,eAAe;IAK1B,YACU,MAAc,EACf,WAAwB,EACxB,MAAc;QAFb,WAAM,GAAN,MAAM,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QALvB,eAAU,GAAW,EAAE,CAAC;QAOtB,IAAI,IAAI,GAAC,IAAI,CAAC;QACd,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE;YACtC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,8EAA8E;YAC9E,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAC,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;CAEF;;YA7BmB,sDAAM;YACF,yDAAW;YAChB,qDAAM;;AARZ,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,4JAAuC;;KAExC,CAAC;2EAOkB,sDAAM;QACF,yDAAW;QAChB,qDAAM;GARZ,eAAe,CAmC3B;AAnC2B","file":"search-posts-search-posts-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Search All Boards</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-searchbar\\n    [(ngModel)]=\\\"searchTerm\\\"\\n    (ionChange)=\\\"setFilteredPosts()\\\"\\n  ></ion-searchbar>\\n\\n  <ion-list lines=\\\"none\\\" *ngFor=\\\"let p of posts\\\" style=\\\"margin-bottom: 2px; margin-top: 2px;\\\">\\n    <ion-item (click)=\\\"goToItem(p)\\\" style=\\\"margin: auto; border-radius: 10px; width: 95%;\\\" color=\\\"tertiary\\\" >\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <ion-img [src]=\\\"p.img\\\" style=\\\"border-radius: 50%\\\"></ion-img>\\n      </ion-thumbnail>\\n      \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label>No. {{ p.docId }}</ion-label>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-label style=\\\"font-weight: bold;\\\">{{ p.title }}</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-icon src=\\\"assets/icon/arrow-forward-outline.svg\\\"></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n  </ion-list>\\n\\n\\n</ion-content>\"","import { Injectable } from '@angular/core';\nimport { Events } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport * as firebase from 'firebase';\nimport { ToastController } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ItemService {\n\n  ref = firebase.database().ref('original-post/');\n\n  constructor(public events: Events, public toastController: ToastController) {\n    console.log(\"loading saved items\");\n\n    this.ref.on('value', resp => {\n      this.posts = [];\n      this.posts = snapshotToArray(resp);\n      console.log(this.posts.length+\" items loaded\");\n      console.log(this.posts);\n      this.events.publish('dataloaded',Date.now());\n    });\n  }\n\n  posts:Array<any>=new Array();\n\n  // this will represent the post you have made\n  yourPost:Array<any>=new Array();\n\n  public getYourPosts() {\n    return this.yourPost;\n  }\n\n  private compareDate(a,b) {\n    return a - b;\n  }\n\n  public async getReplies(threadId) {\n    var curr = this;\n    let replies = [];\n    var db = firebase.firestore();\n\n    // get replies and order by timestamp\n    db.collection('original-post/'+threadId+'/replies').orderBy('timestamp').get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        console.log(doc.data());\n        console.log(doc.ref.id);\n\n        var date = new Date(item.timestamp);\n        console.log((date.getMonth()+1)+ \"/\" + date.getDate() + \"/\" +date.getFullYear() +\" \"+date.getHours()+\":\"+(\"0\"+date.getMinutes()).slice(-2));\n\n\n        // add item to the database\n        // ensure doc is there for deletion\n        replies.push({\n          replyTo : item.replyTo,\n          text : item.text,\n          timestamp : item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // append image if needed\n        if (item.img != null) {\n          replies[replies.length-1]['img'] = item.img;\n        }\n      }\n    )});\n\n    return replies;\n  }\n\n\n  // return the items\n  public getPosts() {\n    var curr = this;\n    curr.posts = [];\n    var db = firebase.firestore();\n\n    db.collection('original-post').get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        console.log(doc.data());\n        console.log(doc.ref.id);\n\n        \n        // add item to the database\n        // ensure doc is there for deletion\n        curr.posts.push({\n          text : item.text,\n          title : item.title,\n          timestamp: item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // check to see if item has image\n        if (item.img != null) {\n          curr.posts[curr.posts.length-1]['img'] = item.img;\n        }\n      }\n    )});\n    curr.events.publish('dataloaded',Date.now());\n  }\n\n\n  // used to create post without image\n  public createPostNoImage(title,text) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(\"original-post\").add({\n      title : title,\n      text : text,\n      timestamp : Date.now()\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        docId : docRef.id,\n        timestamp : Date.now()\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());\n    this.getPosts();\n  }\n\n  // this will create a new post with a picture\n  public createPost(title,text,img) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(\"original-post\").add({\n      title : title,\n      text : text,\n      timestamp :  Date.now(),\n      img : img,\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        img : img,\n        timestamp : Date.now(),\n        docId : docRef.id\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    \n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());\n    this.getPosts();\n  }\n\n  // displays message telling user that new item was added\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      color: 'dark',\n      message: message,\n      duration: 2000,\n      showCloseButton: true\n    });\n    toast.present();\n  }\n\n  filterPosts(searchTerm) {\n    console.log(\"filtering: \" + searchTerm);\n\n    if (searchTerm == \"\") {\n      return this.posts;\n    }\n\n    return this.posts.filter(post => {\n      return post.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n    });\n  }\n\n}\n\nexport const snapshotToArray = snapshot => {\n  let returnArr = [];\n\n  snapshot.forEach(childSnapshot => {\n    let item = childSnapshot.val();\n    item.key = childSnapshot.key;\n    console.log(item);\n    returnArr.push(item);\n  });\n  return returnArr;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPostsPage } from './search-posts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPostsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPostsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPostsPageRoutingModule } from './search-posts-routing.module';\n\nimport { SearchPostsPage } from './search-posts.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SearchPostsPageRoutingModule\n  ],\n  declarations: [SearchPostsPage]\n})\nexport class SearchPostsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC1wb3N0cy9zZWFyY2gtcG9zdHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Events } from '@ionic/angular';\nimport { ItemService } from '../item.service';\nimport { ToastController } from '@ionic/angular';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-search-posts',\n  templateUrl: './search-posts.page.html',\n  styleUrls: ['./search-posts.page.scss'],\n})\nexport class SearchPostsPage implements OnInit {\n\n  public posts: any;\n  searchTerm: string = \"\";\n\n  constructor(\n    private router: Router,\n    public itemService: ItemService,\n    public events: Events,\n  ) { \n    var self=this;\n    events.subscribe('dataloaded', (time) => {\n      self.posts = [];\n      self.posts = self.itemService.posts;\n      // user and time are the same arguments passed in `events.publish(user, time)`\n      console.log('data reloading  time:', time);\n      console.log(self.posts);\n    });\n    self.itemService.getPosts();\n  }\n\n  ngOnInit() {\n    this.setFilteredPosts();\n  }\n\n  setFilteredPosts() {\n    this.posts = this.itemService.filterPosts(this.searchTerm);\n  }\n\n  goToItem(post){\n    console.log(\"displaying item info\");\n    console.log(post);\n    this.router.navigate([\"./product-detail\",post]);\n  }\n\n}"],"sourceRoot":""}