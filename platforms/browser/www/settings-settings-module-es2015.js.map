{"version":3,"sources":["./src/app/settings/settings.page.html","./src/app/item.service.ts","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.scss","./src/app/settings/settings.page.ts"],"names":[],"mappings":"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","file":"settings-settings-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item button (click)=\\\"routeTo('./change-theme')\\\">\\n    <ion-icon slot=\\\"start\\\" src=\\\"/assets/icon/color-palette-outline.svg\\\"></ion-icon>\\n    <ion-label>\\n      Change Theme\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-item button (click)=\\\"routeTo('./app-info')\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"information-circle-outline\\\"></ion-icon>\\n    <ion-label>\\n      About App\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-item (click)=\\\"presentAlertConfirm()\\\" lines=none>\\n    <ion-label color=\\\"danger\\\" style=\\\"text-align: center;\\\">\\n      Clear Your Posts\\n    </ion-label>\\n  </ion-item>\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { Events } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport * as firebase from 'firebase';\nimport { ToastController } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ItemService {\n  public darkMode: boolean;\n  public themeValue: string;\n\n  ref = firebase.database().ref('original-post/');\n\n  constructor(public events: Events, public toastController: ToastController) {}\n\n  // this will represent the post you have made\n  public yourPost:Array<any>=new Array();\n\n  public getYourPosts() {\n    return this.yourPost;\n  }\n\n  public async getReplies(threadId, board) {\n    var curr = this;\n    let replies = [];\n    var db = firebase.firestore();\n\n    // get replies and order by timestamp\n    db.collection(board+'/'+threadId+'/replies').orderBy('timestamp').get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        console.log(doc.data());\n        console.log(doc.ref.id);\n\n        var date = new Date(item.timestamp);\n        console.log((date.getMonth()+1)+ \"/\" + date.getDate() + \"/\" +date.getFullYear() +\" \"+date.getHours()+\":\"+(\"0\"+date.getMinutes()).slice(-2));\n\n\n        // add item to the database\n        // ensure doc is there for deletion\n        replies.push({\n          replyTo : item.replyTo,\n          text : item.text,\n          timestamp : item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // append image if needed\n        if (item.img != null) {\n          replies[replies.length-1]['img'] = item.img;\n        }\n      }\n    )});\n\n    return replies;\n  }\n\n\n  // return the items\n  public getPosts(collectionName) {\n    let postList = [];\n    let db = firebase.firestore();\n\n    db.collection(collectionName).get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        //console.log(doc.data());\n        //console.log(doc.ref.id);\n\n        \n        // add item to the database\n        // ensure doc is there for deletion\n        postList.push({\n          text : item.text,\n          title : item.title,\n          timestamp: item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // check to see if item has image\n        if (item.img != null) {\n          postList[postList.length-1]['img'] = item.img;\n        }\n      }\n    )});\n    return postList;\n  }\n\n\n  // used to create post without image\n  public createPostNoImage(title,text,board) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(board).add({\n      title : title,\n      text : text,\n      timestamp : Date.now()\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        docId : docRef.id,\n        timestamp : Date.now(),\n        board : board\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());;\n  }\n\n  // this will create a new post with a picture\n  public createPost(title,text,img, board) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(board).add({\n      title : title,\n      text : text,\n      timestamp :  Date.now(),\n      img : img,\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        img : img,\n        timestamp : Date.now(),\n        docId : docRef.id,\n        board : board\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    \n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());\n  }\n\n  // displays message telling user that new item was added\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      color: 'dark',\n      message: message,\n      duration: 2000,\n      showCloseButton: true\n    });\n    toast.present();\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ItemService } from '../item.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  \n  constructor(\n    private router: Router,\n    private itemService: ItemService,\n    public alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // routes to input page\n  routeTo(route) {\n    this.router.navigate([route]);\n  }\n\n  async presentAlertConfirm() {\n\n    if (this.itemService.yourPost.length == 0) {\n      this.itemService.presentToast(\"There's nothing to clear!\");\n      return;\n    }\n\n    const alert = await this.alertController.create({\n      header: 'Clear Posts Locally',\n      message: 'You sure about this?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Yes',\n          handler: () => {\n            console.log('Confirm Okay');\n            let length = this.itemService.yourPost.length;\n            this.itemService.yourPost = [];\n            this.itemService.presentToast(\"You cleared \"+length+\" posts\");\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":""}