{"version":3,"sources":["./src/app/your-posts/your-posts.page.html","./src/app/item.service.ts","./src/app/your-posts/your-posts-routing.module.ts","./src/app/your-posts/your-posts.module.ts","./src/app/your-posts/your-posts.page.scss","./src/app/your-posts/your-posts.page.ts"],"names":[],"mappings":"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","file":"your-posts-your-posts-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Your Posts</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-text *ngIf=\\\"yourPosts.length==0\\\">\\n    <h2 style=\\\"text-align: center;\\\">You've Made No Post Today</h2>\\n  </ion-text>\\n\\n  <ion-list lines=\\\"none\\\" *ngFor=\\\"let p of yourPosts\\\" style=\\\"margin-bottom: 2px; margin-top: 2px;\\\">\\n    <ion-item  (click)=\\\"goToItem(p)\\\" style=\\\"margin-bottom: 0px; margin-top: 0px; border-radius: 2px; width: 100%;\\\" color=\\\"tertiary\\\" >\\n      <ion-thumbnail *ngIf=\\\"p.img\\\" slot=\\\"start\\\">\\n        <ion-img [src]=\\\"p.img\\\" style=\\\"border-radius: 50%\\\"></ion-img>\\n      </ion-thumbnail>\\n      \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label>No. {{ p.docId }}</ion-label>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-label style=\\\"font-weight: bold;\\\">{{ p.title }}</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-icon src=\\\"assets/icon/arrow-forward-outline.svg\\\"></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    \\n  </ion-list>\\n\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { Events } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport * as firebase from 'firebase';\nimport { ToastController } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ItemService {\n  public darkMode: boolean;\n  public themeValue: string;\n\n  ref = firebase.database().ref('original-post/');\n\n  constructor(public events: Events, public toastController: ToastController) {}\n\n  // this will represent the post you have made\n  public yourPost:Array<any>=new Array();\n\n  public getYourPosts() {\n    return this.yourPost;\n  }\n\n  public async getReplies(threadId, board) {\n    var curr = this;\n    let replies = [];\n    var db = firebase.firestore();\n\n    // get replies and order by timestamp\n    db.collection(board+'/'+threadId+'/replies').orderBy('timestamp').get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        console.log(doc.data());\n        console.log(doc.ref.id);\n\n        var date = new Date(item.timestamp);\n        console.log((date.getMonth()+1)+ \"/\" + date.getDate() + \"/\" +date.getFullYear() +\" \"+date.getHours()+\":\"+(\"0\"+date.getMinutes()).slice(-2));\n\n\n        // add item to the database\n        // ensure doc is there for deletion\n        replies.push({\n          replyTo : item.replyTo,\n          text : item.text,\n          timestamp : item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // append image if needed\n        if (item.img != null) {\n          replies[replies.length-1]['img'] = item.img;\n        }\n      }\n    )});\n\n    return replies;\n  }\n\n\n  // return the items\n  public getPosts(collectionName) {\n    let postList = [];\n    let db = firebase.firestore();\n\n    db.collection(collectionName).get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        //console.log(doc.data());\n        //console.log(doc.ref.id);\n\n        \n        // add item to the database\n        // ensure doc is there for deletion\n        postList.push({\n          text : item.text,\n          title : item.title,\n          timestamp: item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // check to see if item has image\n        if (item.img != null) {\n          postList[postList.length-1]['img'] = item.img;\n        }\n      }\n    )});\n    return postList;\n  }\n\n\n  // used to create post without image\n  public createPostNoImage(title,text,board) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(board).add({\n      title : title,\n      text : text,\n      timestamp : Date.now()\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        docId : docRef.id,\n        timestamp : Date.now(),\n        board : board\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());;\n  }\n\n  // this will create a new post with a picture\n  public createPost(title,text,img, board) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(board).add({\n      title : title,\n      text : text,\n      timestamp :  Date.now(),\n      img : img,\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        img : img,\n        timestamp : Date.now(),\n        docId : docRef.id,\n        board : board\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    \n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());\n  }\n\n  // displays message telling user that new item was added\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      color: 'dark',\n      message: message,\n      duration: 2000,\n      showCloseButton: true\n    });\n    toast.present();\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { YourPostsPage } from './your-posts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: YourPostsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class YourPostsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { YourPostsPageRoutingModule } from './your-posts-routing.module';\n\nimport { YourPostsPage } from './your-posts.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    YourPostsPageRoutingModule\n  ],\n  declarations: [YourPostsPage]\n})\nexport class YourPostsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3lvdXItcG9zdHMveW91ci1wb3N0cy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ItemService } from '../item.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-your-posts',\n  templateUrl: './your-posts.page.html',\n  styleUrls: ['./your-posts.page.scss'],\n})\nexport class YourPostsPage implements OnInit {\n\n  yourPosts;\n\n  constructor(\n    public itemService: ItemService,\n    private router: Router\n  ) {\n    var self = this;\n    self.yourPosts = self.itemService.getYourPosts();\n   }\n\n   goToItem(post){\n    console.log(\"Goinf to your post\");\n    console.log(post);\n    this.router.navigate([\"./product-detail\",post]);\n  }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}