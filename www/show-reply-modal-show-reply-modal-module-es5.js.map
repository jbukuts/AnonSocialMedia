{"version":3,"sources":["./src/app/item.service.ts"],"names":[],"mappings":"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","file":"show-reply-modal-show-reply-modal-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Events } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport * as firebase from 'firebase';\nimport { ToastController } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ItemService {\n\n  ref = firebase.database().ref('original-post/');\n\n  constructor(public events: Events, public toastController: ToastController) {\n    console.log(\"loading saved items\");\n\n    this.ref.on('value', resp => {\n      this.posts = [];\n      this.posts = snapshotToArray(resp);\n      console.log(this.posts.length+\" items loaded\");\n      console.log(this.posts);\n      this.events.publish('dataloaded',Date.now());\n    });\n  }\n\n  posts:Array<any>=new Array();\n\n  // this will represent the post you have made\n  yourPost:Array<any>=new Array();\n\n  public getYourPosts() {\n    return this.yourPost;\n  }\n\n  private compareDate(a,b) {\n    return a - b;\n  }\n\n  public async getReplies(threadId) {\n    var curr = this;\n    let replies = [];\n    var db = firebase.firestore();\n\n    // get replies and order by timestamp\n    db.collection('original-post/'+threadId+'/replies').orderBy('timestamp').get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        console.log(doc.data());\n        console.log(doc.ref.id);\n\n        var date = new Date(item.timestamp);\n        console.log((date.getMonth()+1)+ \"/\" + date.getDate() + \"/\" +date.getFullYear() +\" \"+date.getHours()+\":\"+(\"0\"+date.getMinutes()).slice(-2));\n\n\n        // add item to the database\n        // ensure doc is there for deletion\n        replies.push({\n          replyTo : item.replyTo,\n          text : item.text,\n          timestamp : item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // append image if needed\n        if (item.img != null) {\n          replies[replies.length-1]['img'] = item.img;\n        }\n      }\n    )});\n\n    return replies;\n  }\n\n\n  // return the items\n  public getPosts() {\n    var curr = this;\n    curr.posts = [];\n    var db = firebase.firestore();\n\n    db.collection('original-post').get().then( function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var item = doc.data();\n        console.log(doc.data());\n        console.log(doc.ref.id);\n\n        \n        // add item to the database\n        // ensure doc is there for deletion\n        curr.posts.push({\n          text : item.text,\n          title : item.title,\n          timestamp: item.timestamp,\n          docId : doc.ref.id\n        });\n\n        // check to see if item has image\n        if (item.img != null) {\n          curr.posts[curr.posts.length-1]['img'] = item.img;\n        }\n      }\n    )});\n    curr.events.publish('dataloaded',Date.now());\n  }\n\n\n  // used to create post without image\n  public createPostNoImage(title,text) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(\"original-post\").add({\n      title : title,\n      text : text,\n      timestamp : Date.now()\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        docId : docRef.id,\n        timestamp : Date.now()\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());\n    this.getPosts();\n  }\n\n  // this will create a new post with a picture\n  public createPost(title,text,img) {\n    var self = this;\n\n    // add to db\n    var db = firebase.firestore();\n    db.collection(\"original-post\").add({\n      title : title,\n      text : text,\n      timestamp :  Date.now(),\n      img : img,\n    })\n    .then(function(docRef) {\n      console.log(\"Document written with ID\",docRef.id);\n      // add to the post youve made\n      self.yourPost.push({\n        title : title,\n        text : text,\n        img : img,\n        timestamp : Date.now(),\n        docId : docRef.id\n      });\n    })\n    .catch(function(error){\n      console.error(\"Error adding document: \",error);\n    });\n\n    \n    // update list as item is now gone\n    this.events.publish('dataloaded',Date.now());\n    this.getPosts();\n  }\n\n  // displays message telling user that new item was added\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      color: 'dark',\n      message: message,\n      duration: 2000,\n      showCloseButton: true\n    });\n    toast.present();\n  }\n\n  filterPosts(searchTerm) {\n    console.log(\"filtering: \" + searchTerm);\n\n    if (searchTerm == \"\") {\n      return this.posts;\n    }\n\n    return this.posts.filter(post => {\n      return post.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n    });\n  }\n\n}\n\nexport const snapshotToArray = snapshot => {\n  let returnArr = [];\n\n  snapshot.forEach(childSnapshot => {\n    let item = childSnapshot.val();\n    item.key = childSnapshot.key;\n    console.log(item);\n    returnArr.push(item);\n  });\n  return returnArr;\n}\n"],"sourceRoot":""}